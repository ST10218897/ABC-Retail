@model List<ABC_Retail.Models.UploadedFile>

@{
    ViewData["Title"] = "Blob Files";
}

<h1>Blob Files</h1>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="card-title mb-0">Azure Blob Storage Files</h5>
                <div>
                    <form asp-action="BlobFiles" method="get" class="form-inline">
                        <div class="form-group mr-2">
                            <select name="containerName" class="form-control form-control-sm" onchange="this.form.submit()">
                                <option value="product-images" selected="@(ViewBag.ContainerName == "product-images")">Product Images</option>
                                <option value="documents" selected="@(ViewBag.ContainerName == "documents")">Documents</option>
                                <option value="uploads" selected="@(ViewBag.ContainerName == "uploads")">General Uploads</option>
                                <option value="logs" selected="@(ViewBag.ContainerName == "logs")">Log Files</option>
                            </select>
                        </div>
                        <a asp-action="Upload" class="btn btn-primary btn-sm">Upload File</a>
                    </form>
                </div>
            </div>
            <div class="card-body">
                @if (Model != null && Model.Any())
                {
                    <div class="alert alert-info">
                        <i class="fas fa-database"></i>
                        Viewing files in container: <strong>@ViewBag.ContainerName</strong>
                    </div>
                    
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>File Name</th>
                                    <th>Size</th>
                                    <th>Type</th>
                                    <th>Uploaded</th>
                                    <th>Description</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var file in Model.OrderByDescending(f => f.UploadDate))
                                {
                                    <tr>
                                        <td>
                                            @if (file.FileName.EndsWith(".jpg") || file.FileName.EndsWith(".jpeg") || 
                                                 file.FileName.EndsWith(".png") || file.FileName.EndsWith(".gif"))
                                            {
                                                <i class="fas fa-image text-primary mr-2"></i>
                                            }
                                            else if (file.FileName.EndsWith(".pdf"))
                                            {
                                                <i class="fas fa-file-pdf text-danger mr-2"></i>
                                            }
                                            else if (file.FileName.EndsWith(".doc") || file.FileName.EndsWith(".docx"))
                                            {
                                                <i class="fas fa-file-word text-primary mr-2"></i>
                                            }
                                            else
                                            {
                                                <i class="fas fa-file text-secondary mr-2"></i>
                                            }
                                            @file.FileName
                                        </td>
                                        <td>@FormatFileSize(file.FileSize)</td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(file.Category))
                                            {
                                                <span class="badge badge-info">@file.Category</span>
                                            }
                                            else
                                            {
                                                <span class="badge badge-secondary">Unknown</span>
                                            }
                                        </td>
                                        <td>@file.UploadDate.ToString("yyyy-MM-dd HH:mm")</td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(file.Description))
                                            {
                                                <span title="@file.Description" class="text-truncate d-inline-block" style="max-width: 200px;">
                                                    @file.Description
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">No description</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm" role="group">
                                                <a href="@file.BlobUrl" target="_blank" class="btn btn-info" title="View File">
                                                    <i class="fas fa-external-link-alt"></i> View
                                                </a>
                                                <a asp-action="DownloadBlob" 
                                                   asp-route-containerName="@ViewBag.ContainerName" 
                                                   asp-route-fileName="@file.FileName" 
                                                   class="btn btn-success" title="Download File">
                                                    <i class="fas fa-download"></i> Download
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle"></i>
                        No files found in container: <strong>@ViewBag.ContainerName</strong>
                        <br />
                        <a asp-action="Upload" class="alert-link">Upload files</a> to this container or 
                        <a asp-action="Index" class="alert-link">view log files</a>.
                    </div>
                }
            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col-md-6">
                        <small class="text-muted">
                            <i class="fas fa-info-circle"></i> 
                            Total files: @(Model?.Count ?? 0) in @ViewBag.ContainerName
                        </small>
                    </div>
                    <div class="col-md-6 text-right">
                        <small class="text-muted">
                            <i class="fas fa-cloud"></i> 
                            Azure Blob Storage
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h6 class="card-title mb-0">Container Information</h6>
            </div>
            <div class="card-body">
                <h6>@ViewBag.ContainerName</h6>
                <p class="small text-muted">
                    @GetContainerDescription(ViewBag.ContainerName)
                </p>
                
                <h6>Available Containers:</h6>
                <ul class="list-unstyled small">
                    @foreach (var container in ViewBag.Containers)
                    {
                        <li>
                            <i class="fas fa-folder @(container == ViewBag.ContainerName ? "text-primary" : "text-muted")"></i>
                            @container
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
    
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h6 class="card-title mb-0">Blob Storage Features</h6>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h6>Benefits:</h6>
                        <ul class="list-unstyled small">
                            <li><i class="fas fa-check text-success"></i> Scalable storage</li>
                            <li><i class="fas fa-check text-success"></i> High availability</li>
                            <li><i class="fas fa-check text-success"></i> Secure access</li>
                            <li><i class="fas fa-check text-success"></i> Cost-effective</li>
                        </ul>
                    </div>
                    <div class="col-md-6">
                        <h6>Usage:</h6>
                        <ul class="list-unstyled small">
                            <li><i class="fas fa-images text-info"></i> Product images</li>
                            <li><i class="fas fa-file-pdf text-danger"></i> Documents</li>
                            <li><i class="fas fa-archive text-warning"></i> General files</li>
                            <li><i class="fas fa-list-alt text-secondary"></i> Log files</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    private string FormatFileSize(long bytes)
    {
        if (bytes == 0) return "0 Bytes";
        string[] sizes = { "Bytes", "KB", "MB", "GB" };
        int i = (int)Math.Floor(Math.Log(bytes) / Math.Log(1024));
        return Math.Round(bytes / Math.Pow(1024, i), 2) + " " + sizes[i];
    }
    
    private string GetContainerDescription(string containerName)
    {
        return containerName switch
        {
            "product-images" => "Storage for product images and photos",
            "documents" => "Storage for documents, PDFs, and office files",
            "uploads" => "General file uploads and miscellaneous files",
            "logs" => "System log files and audit trails",
            _ => "Azure Blob Storage container"
        };
    }
}
