@model ABC_Retail.Models.Order

@{
    ViewData["Title"] = "Create Order";
}

<h1>Create Order</h1>

<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="CustomerId" class="control-label">Customer</label>
                        <select asp-for="CustomerId" class="form-control" required>
                            <option value="">-- Select Customer --</option>
                            @foreach (var customer in ViewBag.Customers)
                            {
                                <option value="@customer.CustomerId">@customer.FirstName @customer.LastName</option>
                            }
                        </select>
                        <span asp-validation-for="CustomerId" class="text-danger"></span>
                    </div>
                    
                    <div class="form-group">
                        <label asp-for="ProductId" class="control-label">Product</label>
                        <select asp-for="ProductId" class="form-control" required>
                            <option value="">-- Select Product --</option>
                            @foreach (var product in ViewBag.Products)
                            {
                                var formattedPrice = product.Price ?? "0";
                                <option value="@product.ProductId" data-price="@product.Price">@product.Name - @formattedPrice</option>
                            }
                        </select>
                        <span asp-validation-for="ProductId" class="text-danger"></span>
                    </div>
                    
                    <div class="form-group">
                        <label asp-for="Quantity" class="control-label"></label>
                        <input asp-for="Quantity" class="form-control" type="number" min="1" value="1" />
                        <span asp-validation-for="Quantity" class="text-danger"></span>
                    </div>
                </div>
                
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="PaymentMethod" class="control-label">Payment Method</label>
                        <select asp-for="PaymentMethod" class="form-control" required>
                            <option value="">-- Select Payment Method --</option>
                            <option value="Credit Card">Credit Card</option>
                            <option value="Debit Card">Debit Card</option>
                            <option value="PayPal">PayPal</option>
                            <option value="Bank Transfer">Bank Transfer</option>
                            <option value="Cash">Cash</option>
                        </select>
                        <span asp-validation-for="PaymentMethod" class="text-danger"></span>
                    </div>
                    
                    <div class="form-group">
                        <label class="control-label">Unit Price</label>
                        <input type="text" id="unitPrice" class="form-control" readonly value="R0.00" />
                    </div>
                    
                        <div class="form-group">
                            <label class="control-label">Total Amount</label>
                            <input type="text" id="totalAmount" class="form-control" readonly value="R0.00" />
                            <input type="hidden" asp-for="TotalAmount" id="totalAmountHidden" value="0" />
                        </div>
                </div>
            </div>
            
            <div class="form-group">
                <label asp-for="ShippingAddress" class="control-label">Shipping Address</label>
                <textarea asp-for="ShippingAddress" class="form-control" rows="3" placeholder="Enter complete shipping address"></textarea>
                <span asp-validation-for="ShippingAddress" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="Notes" class="control-label">Order Notes (Optional)</label>
                <textarea asp-for="Notes" class="form-control" rows="2" placeholder="Any special instructions or notes..."></textarea>
                <span asp-validation-for="Notes" class="text-danger"></span>
            </div>
            
            <div class="alert alert-info">
                <strong>Note:</strong> Orders are processed asynchronously through Azure Queue. The order will be added to the processing queue upon submission.
            </div>
            
            <div class="form-group">
                <input type="submit" value="Create Order" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-secondary">Back to Orders</a>
            </div>
        </form>
    </div>
    
    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5 class="card-title">Order Summary</h5>
            </div>
            <div class="card-body">
                <div id="orderSummary">
                    <p class="text-muted">Select a customer and product to see order details.</p>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Calculate order total with debug logs
        function calculateTotal() {
            const productSelect = document.getElementById('ProductId');
            const quantityInput = document.getElementById('Quantity');
            const unitPriceInput = document.getElementById('unitPrice');
            const totalAmountInput = document.getElementById('totalAmount');
            
            if (productSelect.value && quantityInput.value) {
                const priceStr = productSelect.options[productSelect.selectedIndex].getAttribute('data-price') || '0';
                const price = parseFloat(priceStr);
                const quantity = parseInt(quantityInput.value);
                const total = price * quantity;

                // Debug logs
                console.log(`Selected Product Price: R${price.toFixed(2)}, Quantity: ${quantity}, Total: R${total.toFixed(2)}`);
                
                unitPriceInput.value = 'R' + price.toFixed(2);
                totalAmountInput.value = 'R' + total.toFixed(2);
                document.getElementById('totalAmountHidden').value = total;
                
                // Update order summary
                updateOrderSummary(
                    productSelect.options[productSelect.selectedIndex].text,
                    price,
                    quantity,
                    total
                );
            } else {
                unitPriceInput.value = 'R0.00';
                totalAmountInput.value = 'R0.00';
                document.getElementById('totalAmountHidden').value = '0';
                document.getElementById('orderSummary').innerHTML = '<p class="text-muted">Select a customer and product to see order details.</p>';
            }
        }
        
        // Update order summary
        function updateOrderSummary(productName, unitPrice, quantity, total) {
            const customerSelect = document.getElementById('CustomerId');
            const customerName = customerSelect.value ? customerSelect.options[customerSelect.selectedIndex].text : 'Not selected';
            
            const summaryHtml = `
                <div class="mb-2">
                    <strong>Customer:</strong> ${customerName}
                </div>
                <div class="mb-2">
                    <strong>Product:</strong> ${productName}
                </div>
                <div class="mb-2">
                    <strong>Quantity:</strong> ${quantity}
                </div>
                <div class="mb-2">
                    <strong>Unit Price:</strong> R${unitPrice.toFixed(2)}
                </div>
                <hr>
                <div class="mb-2">
                    <strong>Total Amount:</strong> R${total.toFixed(2)}
                </div>
            `;
            
            document.getElementById('orderSummary').innerHTML = summaryHtml;
        }
        
        // Event listeners
        document.getElementById('ProductId').addEventListener('change', calculateTotal);
        document.getElementById('Quantity').addEventListener('input', calculateTotal);
        document.getElementById('CustomerId').addEventListener('change', calculateTotal);
        
        // Initial calculation
        calculateTotal();
    </script>
}
